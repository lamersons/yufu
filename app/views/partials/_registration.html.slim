.block.second
  .container.clearfix
    p.h1
      = t('main.earn_with_us')
    .item.translator[data-target="translator"]
      .wrap
        span.arrow.icons-arrow-second-default.translator
        span.icon
        p.h2
          = t('translator')
    .item.supplier[data-target="supplier"]
      .wrap
        span.arrow.icons-arrow-second-default.supplier
        span.icon
        p.h2
          = t('supplier')
    .item.last.agent[data-target="agent"]
      .wrap
        span.arrow.icons-arrow-second-default.agent
        span.icon
        p.h2
          = t('agent')
    .clear
    p.text-block.translator
      = ts('main.about.translator')
    p.text-block.supplier
      = ts('main.about.supplier')
    p.text-block.agent
      = ts('main.about.agent')
= form_for @user, url: url_for(controller: 'api/v1/users', action: 'create'), html: {class: 'reg-form clearfix'}, remote: true do |f|
  .container
    .now
      = t('main.register_now')
    .form-radios
      = label_tag I18n.t(:translator)
      = radio_button_tag 'user[_type]', 'Profile::Translator::Base', false, class: 'translator', class: 'translator-radio'
      = label_tag I18n.t(:supplier)
      = radio_button_tag 'user[_type]', 'Profile::Client', false, class: 'client', class: 'supplier-radio'
      = label_tag I18n.t(:agent)
      = radio_button_tag 'user[_type]', 'Profile::Partner', false, class: 'partner', class: 'agent-radio'
    .email
      = f.email_field :email, class: 'email', :readonly => true
      p.after-input-text
        = t('main.before_registration')
      .tooltip-wrap
        .tooltip.clearfix
          span
          p
            = t('main.choose_registration_type')
    .check.clearfix
      = f.submit '', id: 'main_register_submit', disabled: true
      p
        = t('main.check_email')
        .message.success На Ваш email отправлено письмо с данными для входа на сайт
        .message.error Пользователь с таким email уже зарегистрирован в системе

coffee:
  new RegForm()