.block.first
  .container.clearfix
    p.h1
      = ts('main.we_offer')
    .item.inactive-item.verbal[data-target="verbal"]
      a
        span.icon
      p.h2
        = ts('main.spoken_translates')
      .over
        span
        p
          = t('main.spoken_translate.description').html_safe
    .item.inactive-item.writing[data-target="writing"]
      a
        span.icon
      p.h2
        = ts('main.written_translates')
      .over
        span
        p
          = t('main.written_translate.description').html_safe
    .item.inactive-item.last.local[data-target="local"]
      a
        span.icon
      p.h2
        = ts('main.local_experts')
      .over
        span
        p
          = t('main.local_expert.description').html_safe
.first-points-scroll-to
.first-points
  .container.verbal.clearfix
    p
      = ts('main.spoken_translate.info')
    .clear.height-30
    .item.first
      .icon
        span.verbal.gid
      p
        = ts('main.spoken_translate.block1')
      .over
        = link_to url_for(controller: :orders, action: :create, order: {_type:  'Order::Verbal', language_criterions_attributes: [{level: 1, language_id: Language.first.id}]}), class: 'create_order', method: :post do
          p.zakaz
            = ts('make_order')
    .item
      .icon
        span.verbal.business
      p
        = ts('main.spoken_translate.block2')
      .over
        = link_to url_for(controller: :orders, action: :create, order: {_type:  'Order::Verbal', language_criterions_attributes: [{level: 2, language_id: Language.first.id}]}), class: 'create_order', method: :post do
          p.zakaz
            = ts('make_order')
    .item.third
      .icon
        span.verbal.expert
      p
        = ts('main.spoken_translate.block3')
      .over
        = link_to url_for(controller: :orders, action: :create, order: {_type:  'Order::Verbal', language_criterions_attributes: [{level: 3, language_id: Language.first.id}]}),  class: 'create_order', method: :post do
          p.zakaz
            = ts('make_order')
  .container.writing.clearfix
    .item.first
      .icon
        span.writing.ur
      p
        = ts('main.written_translate.block1')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')
    .item
      .icon
        span.writing.tech
      p
        = ts('main.written_translate.block2')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')
    .item.third
      .icon
        span.writing.st
      p
        = ts('main.written_translate.block3')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')
    .clear
    .item.first
      .icon
        span.writing.hud
      p
        = ts('main.written_translate.block4')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')
    .item
      .icon
        span.writing.loc
      p
        = ts('main.written_translate.block5')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')
    .item.third
      .icon
        span.writing.lang
      p
        = ts('main.written_translate.block6')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')
    .clear.height-10
    p
      = ts('main.written_translate.info')
  .container.local.clearfix
    .item.first
      .icon
        span.local.ur
      p
        = ts('main.local_expert.block1')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')
    .item
      .icon
        span.local.reg
      p
        = ts('main.local_expert.block2')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')
    .item.third
      .icon
        span.local.business
      p
        = ts('main.local_expert.block3')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')
    .clear
    .item.first
      .icon
        span.local.arenda
      p
        = ts('main.local_expert.block4')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')
    .item
      .icon
        span.local.fabrika
      p
        = ts('main.local_expert.block5')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')
    .item.third
      .icon
        span.local.other
      p
        = ts('main.local_expert.block6')
      .over
        = link_to '#' do
          p.zakaz
            = ts('make_order')

.block.second
  .container.clearfix
    p.h1
      = t('main.earn_with_us')
    .item.translator[data-target="translator"]
      .wrap
        span.arrow.icons-arrow-second-default.translator
        span.icon
        p.h2
          = t('translator')
    .item.supplier[data-target="supplier"]
      .wrap
        span.arrow.icons-arrow-second-default.supplier
        span.icon
        p.h2
          = t('supplier')
    .item.last.agent[data-target="agent"]
      .wrap
        span.arrow.icons-arrow-second-default.agent
        span.icon
        p.h2
          = t('agent')
    .clear
    /Needs rethinking
    p.text-block.translator
      span.left
        = t('main.about.col2')
      span.center
        = t('main.about.col2')
      span.right
        = t('main.about.col2')
    p.text-block.supplier
      span.left
        = t('main.about.col2')
      span.center
        = t('main.about.col2')
      span.right
        = t('main.about.col2')
    p.text-block.agent
      span.left
        = t('main.about.col2')
      span.center
        = t('main.about.col2')
      span.right
        = t('main.about.col2')
= form_for @user, url: url_for(controller: 'api/v1/users', action: 'create'), html: {class: 'reg-form clearfix'}, remote: true do |f|
  .container
    .now
      = t('main.register_now')
      br
      span
    .form-radios
      = label_tag I18n.t(:translator)
      = radio_button_tag 'user[_type]', 'Profile::Translator::Base', false, class: 'translator', class: 'translator-radio'
      = label_tag I18n.t(:supplier)
      = radio_button_tag 'user[_type]', 'Profile::Client', false, class: 'client', class: 'supplier-radio'
      = label_tag I18n.t(:agent)
      = radio_button_tag 'user[_type]', 'Profile::Partner', false, class: 'partner', class: 'agent-radio'
    .email
      = f.email_field :email, class: 'email', :readonly => true, placeholder: I18n.t('main.your_email')
      p.after-input-text
        = t('main.before_registration')
      .tooltip-wrap
        .tooltip.clearfix
          span
          p
            = t('main.choose_registration_type')
    .check.clearfix
      = button_tag '', type: 'submit', id: 'main_register_submit', disabled: true
        span.caret
      p
        .message.success
          = t('main.check_email').html_safe
        .message.error
        .message.load-icon
          = image_tag 'icons/load_img.gif'

coffee:
  new RegForm()
  new Accordion()